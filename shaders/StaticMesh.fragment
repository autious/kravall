#version 430

uniform sampler2D diffuseTexture;
uniform sampler2D specularTexture;
uniform sampler2D glowTexture;
uniform sampler2D normalTexture;

uniform float materialID;

in vec4 positionIN;
in vec4 normalIN;
in vec4 tangentIN;
in vec2 uvIN;
in vec2 depthIN;

layout ( location = 0 ) out vec4 normalDepthRT;
layout ( location = 1 ) out vec4 diffuseRT;
layout ( location = 2 ) out vec4 specularRT;
layout ( location = 3 ) out vec4 glowMatIDRT;

void main()
{
	//Sample normal
	vec4 normal = texture(normalTexture, uvIN);
	normal = 2.0f * normal - 1.0f;

	//Normal mapping
	vec3 bitangent = cross (normalIN.xyz, tangentIN.xyz);

	vec3 Nm = normalIN.xyz;
	vec3 Tm = tangentIN.xyz;
	vec3 Bm = bitangent.xyz;

	mat3 TBN = mat3(Tm, Bm, Nm);

	vec3 n = normal.xyz;
	vec3 bumpedNormal = normalize(n * TBN);

	//Write to normalDepthRT
	normalDepthRT.xyz = bumpedNormal;

	//Depth
	normalDepthRT.w = depthIN.x / depthIN.y;

	//Sample diffuse
	diffuseRT = texture(diffuseTexture, uvIN);

	//Sample specular
	specularRT = texture(specularTexture, uvIN);

	//sample glow
	vec4 glow = texture(glowTexture, uvIN);
	glowMatIDRT.xyz = glow.xyz * glow.w;

	//Set material id
	glowMatIDRT.w = materialID;
}